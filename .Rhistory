}
}
tidy_df <- tidy_df %>%
left_join(time_spent_wide, by="array.index") %>%
left_join(times_wide, by="array.index") %>% select(-c(array.index))
return(tidy_df)
}
combine_places <- function(tidy_places_vec) {
tidy_places <- as.data.frame(tidy_places_vec[1])
for (i in 2:length(tidy_places_vec)) {
tidy_places <- union(tidy_places, as.data.frame(tidy_places_vec[i]))
}
return(tidy_places)
}
tidy_places_vec <- lapply(places_json, tidy_places_json)
tidy_places <- combine_places(tidy_places_vec)
write_csv(tidy_places, "tidy-places.csv")
rlang::last_error()
rlang::last_trace()
debugSource('C:/Users/lukee/Code/abm-poptimes/poptimes.R')
View(times_wide)
View(places_json)
library(tidyverse)
library(tidyjson)
# function to ease reading in multiple json files from the python poptimes library
read_places_json <- function(place_type) {
filename <- paste("chit-", place_type, ".json", sep="")
return(read_json(filename) %>% gather_array)
}
# read json files
place_files <- c("bar", "department_store", "gym", "restaurant", "shopping_mall", "supermarket")
places_json <- lapply(place_files, read_places_json)
# list of all possible google maps place types
place_types <- scan("place-types.txt", what="", sep="\n")
tidy_places_json <- function(places_json) {
tidy_df <- as.data.frame(places_json %>%
spread_all %>%
select(array.index, id, name, address)) %>%
select(!c(..JSON))
times <- places_json %>%
enter_object(populartimes) %>%
gather_array %>%
enter_object(data) %>%
gather_array %>%
append_values_number("value") %>%
select(!c(document.id))
times_wide <- as.data.frame(times) %>%
select(!c(..JSON)) %>%
pivot_wider(names_from = c(array.index.2, array.index.3), values_from = value)
time_spent <- places_json %>%
enter_object(time_spent) %>%
gather_array %>%
append_values_number("value") %>%
select(!c(document.id))
time_spent_wide <- as.data.frame(time_spent) %>%
select(!c(..JSON)) %>%
pivot_wider(names_from = array.index.2, names_prefix="time_spent_", values_from = value)
tidy_df[place_types] <- 0
types <- places_json %>%
enter_object(types) %>%
gather_array() %>%
append_values_string("type") %>%
select(!c(document.id))
types <- as.data.frame(types)
rownum <- 0
for (i in 1:nrow(types)) {
rownum <- types[i, "array.index"]
location_num <- types[i, "array.index.2"]
type <- types[i, "type"]
if (type %in% colnames(tidy_df)) {
tidy_df[rownum, type] = location_num
}
}
tidy_df <- tidy_df %>%
left_join(time_spent_wide, by="array.index") %>%
left_join(times_wide, by="array.index") %>% select(-c(array.index))
return(tidy_df)
}
combine_places <- function(tidy_places_vec) {
tidy_places <- as.data.frame(tidy_places_vec[1])
for (i in 2:length(tidy_places_vec)) {
tidy_places <- union(tidy_places, as.data.frame(tidy_places_vec[i]))
}
return(tidy_places)
}
tidy_places_vec <- lapply(places_json, tidy_places_json)
tidy_places <- combine_places(tidy_places_vec)
write_csv(tidy_places, "tidy-places.csv")
library(tidyverse)
library(tidyjson)
# function to ease reading in multiple json files from the python poptimes library
read_places_json <- function(place_type) {
filename <- paste("chit-", place_type, ".json", sep="")
return(read_json(filename) %>% gather_array)
}
# read json files
place_files <- c("bar", "department_store", "gym", "restaurant", "shopping_mall", "supermarket")
places_json <- lapply(place_files, read_places_json)
# list of all possible google maps place types
place_types <- scan("place-types.txt", what="", sep="\n")
tidy_places_json <- function(places_json) {
tidy_df <- as.data.frame(places_json %>%
spread_all %>%
select(array.index, id, name, address)) %>%
select(!c(..JSON))
times <- places_json %>%
enter_object(populartimes) %>%
gather_array %>%
enter_object(data) %>%
gather_array %>%
append_values_number("value") %>%
select(!c(document.id))
times_wide <- as.data.frame(times) %>%
select(!c(..JSON)) %>%
pivot_wider(names_from = c(array.index.2, array.index.3), values_from = value)
time_spent <- places_json %>%
enter_object(time_spent) %>%
gather_array %>%
append_values_number("value") %>%
select(!c(document.id))
time_spent_wide <- as.data.frame(time_spent) %>%
select(!c(..JSON)) %>%
pivot_wider(names_from = array.index.2, names_prefix="time_spent_", values_from = value)
tidy_df[place_types] <- 0
types <- places_json %>%
enter_object(types) %>%
gather_array() %>%
append_values_string("type") %>%
select(!c(document.id))
types <- as.data.frame(types)
rownum <- 0
for (i in 1:nrow(types)) {
rownum <- types[i, "array.index"]
location_num <- types[i, "array.index.2"]
type <- types[i, "type"]
if (type %in% colnames(tidy_df)) {
tidy_df[rownum, type] = location_num
}
}
tidy_df <- tidy_df %>%
left_join(time_spent_wide, by="array.index") %>%
left_join(times_wide, by="array.index") %>% select(-c(array.index))
return(tidy_df)
}
combine_places <- function(tidy_places_vec) {
tidy_places <- as.data.frame(tidy_places_vec[1])
for (i in 2:length(tidy_places_vec)) {
tidy_places <- union(tidy_places, as.data.frame(tidy_places_vec[i]))
}
return(tidy_places)
}
tidy_places_vec <- lapply(places_json, tidy_places_json)
tidy_places <- combine_places(tidy_places_vec)
write_csv(tidy_places, "tidy-places.csv")
library(tidyverse)
library(tidyjson)
# function to ease reading in multiple json files from the python poptimes library
read_places_json <- function(place_type) {
filename <- paste("chit-", place_type, ".json", sep="")
return(read_json(filename) %>% gather_array)
}
# read json files
place_files <- c("bar", "department_store", "gym", "restaurant", "shopping_mall", "supermarket")
places_json <- lapply(place_files, read_places_json)
# list of all possible google maps place types
place_types <- scan("place-types.txt", what="", sep="\n")
tidy_places_json <- function(places_json) {
tidy_df <- as.data.frame(places_json %>%
spread_all %>%
select(array.index, id, name, address, rating, rating_n)) %>%
select(!c(..JSON))
times <- places_json %>%
enter_object(populartimes) %>%
gather_array %>%
enter_object(data) %>%
gather_array %>%
append_values_number("value") %>%
select(!c(document.id))
times_wide <- as.data.frame(times) %>%
select(!c(..JSON)) %>%
pivot_wider(names_from = c(array.index.2, array.index.3), values_from = value)
time_spent <- places_json %>%
enter_object(time_spent) %>%
gather_array %>%
append_values_number("value") %>%
select(!c(document.id))
time_spent_wide <- as.data.frame(time_spent) %>%
select(!c(..JSON)) %>%
pivot_wider(names_from = array.index.2, names_prefix="time_spent_", values_from = value)
tidy_df[place_types] <- 0
types <- places_json %>%
enter_object(types) %>%
gather_array() %>%
append_values_string("type") %>%
select(!c(document.id))
types <- as.data.frame(types)
rownum <- 0
for (i in 1:nrow(types)) {
rownum <- types[i, "array.index"]
location_num <- types[i, "array.index.2"]
type <- types[i, "type"]
if (type %in% colnames(tidy_df)) {
tidy_df[rownum, type] = location_num
}
}
tidy_df <- tidy_df %>%
left_join(time_spent_wide, by="array.index") %>%
left_join(times_wide, by="array.index") %>% select(-c(array.index))
return(tidy_df)
}
combine_places <- function(tidy_places_vec) {
tidy_places <- as.data.frame(tidy_places_vec[1])
for (i in 2:length(tidy_places_vec)) {
tidy_places <- union(tidy_places, as.data.frame(tidy_places_vec[i]))
}
return(tidy_places)
}
tidy_places_vec <- lapply(places_json, tidy_places_json)
tidy_places <- combine_places(tidy_places_vec)
write_csv(tidy_places, "tidy-places.csv")
library(tidyverse)
library(tidyjson)
# function to ease reading in multiple json files from the python poptimes library
read_places_json <- function(place_type) {
filename <- paste("chit-", place_type, ".json", sep="")
return(read_json(filename) %>% gather_array)
}
# read json files
place_files <- c("bar", "church", "department_store", "gym", "restaurant", "shopping_mall", "supermarket")
places_json <- lapply(place_files, read_places_json)
# list of all possible google maps place types
place_types <- scan("place-types.txt", what="", sep="\n")
tidy_places_json <- function(places_json) {
tidy_df <- as.data.frame(places_json %>%
spread_all %>%
select(array.index, id, name, address, rating, rating_n)) %>%
select(!c(..JSON))
times <- places_json %>%
enter_object(populartimes) %>%
gather_array %>%
enter_object(data) %>%
gather_array %>%
append_values_number("value") %>%
select(!c(document.id))
times_wide <- as.data.frame(times) %>%
select(!c(..JSON)) %>%
pivot_wider(names_from = c(array.index.2, array.index.3), values_from = value)
time_spent <- places_json %>%
enter_object(time_spent) %>%
gather_array %>%
append_values_number("value") %>%
select(!c(document.id))
time_spent_wide <- as.data.frame(time_spent) %>%
select(!c(..JSON)) %>%
pivot_wider(names_from = array.index.2, names_prefix="time_spent_", values_from = value)
tidy_df[place_types] <- 0
types <- places_json %>%
enter_object(types) %>%
gather_array() %>%
append_values_string("type") %>%
select(!c(document.id))
types <- as.data.frame(types)
rownum <- 0
for (i in 1:nrow(types)) {
rownum <- types[i, "array.index"]
location_num <- types[i, "array.index.2"]
type <- types[i, "type"]
if (type %in% colnames(tidy_df)) {
tidy_df[rownum, type] = location_num
}
}
tidy_df <- tidy_df %>%
left_join(time_spent_wide, by="array.index") %>%
left_join(times_wide, by="array.index") %>% select(-c(array.index))
return(tidy_df)
}
combine_places <- function(tidy_places_vec) {
tidy_places <- as.data.frame(tidy_places_vec[1])
for (i in 2:length(tidy_places_vec)) {
tidy_places <- union(tidy_places, as.data.frame(tidy_places_vec[i]))
}
return(tidy_places)
}
tidy_places_vec <- lapply(places_json, tidy_places_json)
tidy_places <- combine_places(tidy_places_vec)
write_csv(tidy_places, "tidy-places.csv")
filter_poi <- function(type) {
max_level <- 2
return(poptimes %>% filter(poptimes[type] != 0 & poptimes[type] <= max_level))
}
lapply(poi, filter_poi)
library(tidyverse)
poptimes <- read_csv("tidy-places.csv")
poi <- c("bar", "restaurant", "supermarket", "church", "gym", "shopping_mall", "store", "department_store")
filter_poi <- function(type) {
max_level <- 2
return(poptimes %>% filter(poptimes[type] != 0 & poptimes[type] <= max_level))
}
lapply(poi, filter_poi)
filtered <- lapply(poi, filter_poi)
View(filtered)
View(filtered)
bar <- as.data.frame(filtered[match("bar", poi)])
View(bar)
View(bar)
View(bar)
bar <- as.data.frame(filtered[match("bar", poi)])
restaurant <- as.data.frame(filtered[match("restaurant", poi)])
supermarket <- as.data.frame(filtered[match("supermarket", poi)])
gym <- as.data.frame(filtered[match("gym", poi)])
shopping_mall <- as.data.frame(filtered[match("shopping_mall", poi)])
department_store <- as.data.frame(filtered[match("department_store", poi)])
store <- union(shopping_mall, department_store)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
avg_time <- list()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
filter_poi <- function(type, max_level) {
return(poptimes %>% filter(poptimes[type] != 0 & poptimes[type] <= max_level))
}
normalize <- function(x) {
return( (x - min(x) ) / ( max(x) - min(x) ) * 100)
}
summarize_hours <- function(input, func=mean) {
df = input[,(ncol(input)-(168-1)):ncol(input)]
df = as.data.frame(t(df %>% summarize_each(funs(func))))
df$hour.total = 0:(nrow(df)-1)
days = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
df$day = days[floor((df$hour) / 24) + 1]
df$hour.day = df$hour %% 24
colnames(df)[1] = "popularity"
df$popularity = normalize(df$popularity)
df = df[, c(3, 2, 1, 4)]
return(df)
}
poptimes <- read_csv("tidy-places.csv")
poi <- c("supermarket", "church", "gym", "shopping_mall", "store", "department_store")
filtered <- lapply(poi, filter_poi, 2)
bar <- filter_poi("bar", 1)
restaurant <- filter_poi("restaurant", 1)
supermarket <- as.data.frame(filtered[match("supermarket", poi)])
gym <- as.data.frame(filtered[match("gym", poi)])
shopping_mall <- as.data.frame(filtered[match("shopping_mall", poi)])
department_store <- as.data.frame(filtered[match("department_store", poi)])
store <- union(shopping_mall, department_store)
plot_hours <- function(input, plot_title=NULL, day_filter=NULL) {
x_breaks = seq(0, 24, 6)
y_breaks = seq(0, 100, 10)
if (!is.null(day_filter)) {
input = input %>% filter(day == day_filter)
x_breaks = seq(0, 23, 1)
}
plot = ggplot(data = input, mapping = aes(x=hour.day, y=popularity)) +
geom_bar(stat="identity", fill="dodgerblue4", color="white", width=1) +
facet_wrap(~factor(day,levels=c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")), nrow=1) +
labs(title=plot_title, x="Hour of Day", y="Popularity") +
scale_x_continuous(breaks=x_breaks, limits=c(0, 24), na.value=0) +
scale_y_continuous(breaks=y_breaks, limits=c(0, 100)) +
theme_minimal() +
theme(panel.grid.major.x = element_blank(), panel.grid.minor.x = element_blank(), panel.grid.minor.y = element_blank())
return(plot)
}
plot_hours_daily <- function(input, plot_title=NULL) {
days = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
for(day in days) {
print(plot_hours(input, plot_title, day))
}
}
plot_hours_individual <- function(input) {
for (x in 1:nrow(input)) {
name = input[x,"name"]
addr = input[x,"address"]
print(plot_hours(summarize_hours(input[x,], mean), paste(name, addr, sep=" // ")))
}
}
avg_time_spent <- function(input, type) {
data = input %>% filter(!is.na(time_spent_1) & !is.na(time_spent_2))
t1 = mean(data$time_spent_1)
t2 = mean(data$time_spent_2)
df = data.frame("type"=type, "time_spent_1"=t1, "time_spent_2"=t2)
return(df)
}
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store, store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store", "store")
avg_time <- list()
for (i in 1:length(loc)) {
print(avg_time_spent(as.data.frame(loc[i]), loc_name[i]))
}
plot_hours(summarize_hours(bar, mean), "Mean Bar Popularity")
plot_hours(summarize_hours(restaurant, mean), "Mean Restaurant Popularity")
plot_hours(summarize_hours(supermarket, mean), "Mean Supermarket Popularity")
plot_hours(summarize_hours(gym, mean), "Mean Gym Popularity")
plot_hours(summarize_hours(shopping_mall, mean), "Mean Shopping Mall Popularity")
plot_hours(summarize_hours(department_store, mean), "Mean Department Store Popularity")
plot_hours(summarize_hours(store, mean), "Mean Store Popularity (Shopping Mall + Department Store)")
plot_hours_individual(supermarket)
#plot_hours_individual(bar)
plot_hours_daily(summarize_hours(bar, mean), "Mean Bar Popularity")
plot_hours_daily(summarize_hours(restaurant, mean), "Mean Restaurant Popularity")
plot_hours_daily(summarize_hours(supermarket, mean), "Mean Supermarket Popularity")
plot_hours_daily(summarize_hours(gym, mean), "Mean Gym Popularity")
plot_hours_daily(summarize_hours(shopping_mall, mean), "Mean Shopping Mall Popularity")
plot_hours_daily(summarize_hours(department_store, mean), "Mean Department Store Popularity")
plot_hours_daily(summarize_hours(store, mean), "Mean Store Popularity (Shopping Mall + Department Store)")
View(loc)
View(loc)
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store, store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store", "store")
avg_time <- list()
for (i in 1:length(loc)) {
append(avg_time, avg_time_spent(as.data.frame(loc[i]), loc_name[i]))
}
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store, store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store", "store")
avg_time <- list()
for (i in 1:length(loc)) {
append(avg_time, avg_time_spent(as.data.frame(loc[i]), loc_name[i]))
}
for (i in 1:length(loc)) {
append(avg_time, avg_time_spent(as.data.frame(loc[i]), loc_name[i]))
}
for (i in 1:length(loc)) {
print(avg_time_spent(as.data.frame(loc[i]), loc_name[i]))
append(avg_time, avg_time_spent(as.data.frame(loc[i]), loc_name[i]))
}
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store, store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store", "store")
avg_time <- list()
for (i in 1:length(loc)) {
print(avg_time_spent(as.data.frame(loc[i]), loc_name[i]))
avg_time <- append(avg_time, avg_time_spent(as.data.frame(loc[i]), loc_name[i]))
}
View(avg_time)
View(avg_time)
avg_time <- append(avg_time, as.data.frame(avg_time_spent(as.data.frame(loc[i]), loc_name[i])))
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store, store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store", "store")
avg_time <- list()
for (i in 1:length(loc)) {
print(avg_time_spent(as.data.frame(loc[i]), loc_name[i]))
avg_time <- append(avg_time, as.data.frame(avg_time_spent(as.data.frame(loc[i]), loc_name[i])))
}
View(avg_time)
View(avg_time)
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store, store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store", "store")
avg_time <- setNames(data.frame(matrix(ncol = 3, nrow = 0)), c("type", "time_spent_1", "time_spent_2"))
for (i in 1:length(loc)) {
avg_time <- union(avg_time, as.data.frame(avg_time_spent(as.data.frame(loc[i]), loc_name[i])))
}
avg_time <- data.frame("type"=".", "time_spent_1"=0.1, "time_spent_2"=0.1)
for (i in 1:length(loc)) {
avg_time <- union(avg_time, as.data.frame(avg_time_spent(as.data.frame(loc[i]), loc_name[i])))
}
avg_time <- avg_time[2:nrow(avg_time),]
View(avg_time)
View(avg_time)
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store, store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store", "store")
avg_time <- data.frame("type"=".", "time_spent_1"=0.1, "time_spent_2"=0.1)
for (i in 1:length(loc)) {
avg_time <- union(avg_time, as.data.frame(avg_time_spent(as.data.frame(loc[i]), loc_name[i])))
}
avg_time <- avg_time[2:nrow(avg_time),]
View(avg_time)
View(avg_time)
avg_time %>% mutate(diff = time_spent_2-time_spent_1)
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store, store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store", "store")
avg_time <- data.frame("type"=".", "time_spent_1"=0.1, "time_spent_2"=0.1)
for (i in 1:length(loc)) {
avg_time <- union(avg_time, as.data.frame(avg_time_spent(as.data.frame(loc[i]), loc_name[i])))
}
avg_time <- avg_time[2:nrow(avg_time),]
avg_time %>% mutate(diff = time_spent_2-time_spent_1)
print(avg_time %>% arrange(time_spent_1))
print(avg_time %>% arrange(time_spent_2))
print(avg_time %>% arrange(diff))
avg_time %>% mutate(diff = time_spent_2-time_spent_1)
avg_time <- avg_time %>% mutate(diff = time_spent_2-time_spent_1)
print(avg_time %>% arrange(time_spent_1))
print(avg_time %>% arrange(time_spent_2))
print(avg_time %>% arrange(diff))
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store, store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store", "store")
avg_time <- data.frame("type"=".", "time_spent_1"=0.1, "time_spent_2"=0.1)
for (i in 1:length(loc)) {
avg_time <- union(avg_time, as.data.frame(avg_time_spent(as.data.frame(loc[i]), loc_name[i])))
}
avg_time <- avg_time[2:nrow(avg_time),]
avg_time <- avg_time %>% mutate(diff = time_spent_2-time_spent_1)
print(avg_time %>% arrange(time_spent_1))
print(avg_time %>% arrange(time_spent_2))
print(avg_time %>% arrange(diff))
loc <- list(bar, restaurant, supermarket, gym, shopping_mall, department_store)
loc_name <- c("bar", "restaurant", "supermarket", "gym", "shopping mall", "department store")
avg_time <- data.frame("type"=".", "time_spent_1"=0.1, "time_spent_2"=0.1)
for (i in 1:length(loc)) {
avg_time <- union(avg_time, as.data.frame(avg_time_spent(as.data.frame(loc[i]), loc_name[i])))
}
avg_time <- avg_time[2:nrow(avg_time),]
avg_time <- avg_time %>% mutate(diff = time_spent_2-time_spent_1)
print(avg_time %>% arrange(time_spent_1))
print(avg_time %>% arrange(time_spent_2))
print(avg_time %>% arrange(diff))
cable(avg_time %>% arrange(time_spent_1))
kable(avg_time %>% arrange(time_spent_1))
library(knitr)
kable(avg_time %>% arrange(time_spent_1))
kable(avg_time %>% arrange(time_spent_2))
kable(avg_time %>% arrange(diff))
